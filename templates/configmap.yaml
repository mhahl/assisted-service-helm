---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "assisted-installer.fullname" . }}-config
  labels:
    {{- include "assisted-installer.api.labels" . | nindent 4 }}
data:
{{- range $key, $val := .Values.config }}
{{ $key | indent 2 }}: {{ $val | quote }}
{{- end}}
  POSTGRESQL_DATABASE: {{ .Values.postgresql.postgresqlDatabase | quote }}
  POSTGRESQL_PASSWORD: {{ .Values.postgresql.postgresqlPassword | quote }}
  POSTGRESQL_USER: {{.Values.postgresql.postgresqlUsername | quote }}
  DB_HOST: "{{ .Release.Name }}-postgresql"
  DB_PORT: "5432"
  DB_USER: {{ .Values.postgresql.postgresqlUsername | quote }}
  DB_PASS: {{ .Values.postgresql.postgresqlPassword | quote }}
  DB_NAME: {{ .Values.postgresql.postgresqlDatabase | quote }}
  DEPLOY_TARGET: "onprem"
  STORAGE: "filesystem"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "assisted-installer.fullname" . }}-nginx
  labels:
    {{- include "assisted-installer.api.labels" . | nindent 4 }}
data:
    nginx.conf: | 
        server {
            listen 8080;
            server_name _;
            root /app;
            index index.html;
            location /api {
                proxy_pass  http://{{ include "assisted-installer.fullname" . }}-api:{{ .Values.api.service.port}};
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }
            location / {
                try_files $uri /index.html;
            }
        }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "assisted-installer.fullname" . }}-mirror-registry-conf
  labels:
    {{- include "assisted-installer.api.labels" . | nindent 4 }}
data:
  ca-bundle.crt: |
    {{- .Values.mirror_registry.ca_bundle | nindent 4 }}
  registries.conf: |
    {{- .Values.mirror_registry.registries_conf | nindent 4 }}